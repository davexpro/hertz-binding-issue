// Code generated by Fastpb v0.0.2. DO NOT EDIT.

package pb_gen

import (
	fmt "fmt"

	fastpb "github.com/cloudwego/fastpb"
)

var (
	_ = fmt.Errorf
	_ = fastpb.Skip
)

func (x *ExampleRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 4:
		offset, err = x.fastReadField4(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 5:
		offset, err = x.fastReadField5(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ExampleRequest[number], err)
}

func (x *ExampleRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Alpha, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Bravo, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Charlie, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleRequest) fastReadField4(buf []byte, _type int8) (offset int, err error) {
	x.Delta, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleRequest) fastReadField5(buf []byte, _type int8) (offset int, err error) {
	x.Echo, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *ExampleResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 4:
		offset, err = x.fastReadField4(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ExampleResponse[number], err)
}

func (x *ExampleResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Foxtrot, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Golf, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Hotel, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ExampleResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
	x.India, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *ExampleRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	offset += x.fastWriteField4(buf[offset:])
	offset += x.fastWriteField5(buf[offset:])
	return offset
}

func (x *ExampleRequest) fastWriteField1(buf []byte) (offset int) {
	if x.Alpha == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetAlpha())
	return offset
}

func (x *ExampleRequest) fastWriteField2(buf []byte) (offset int) {
	if x.Bravo == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetBravo())
	return offset
}

func (x *ExampleRequest) fastWriteField3(buf []byte) (offset int) {
	if x.Charlie == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetCharlie())
	return offset
}

func (x *ExampleRequest) fastWriteField4(buf []byte) (offset int) {
	if x.Delta == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 4, x.GetDelta())
	return offset
}

func (x *ExampleRequest) fastWriteField5(buf []byte) (offset int) {
	if x.Echo == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 5, x.GetEcho())
	return offset
}

func (x *ExampleResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	offset += x.fastWriteField4(buf[offset:])
	return offset
}

func (x *ExampleResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Foxtrot == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetFoxtrot())
	return offset
}

func (x *ExampleResponse) fastWriteField2(buf []byte) (offset int) {
	if x.Golf == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetGolf())
	return offset
}

func (x *ExampleResponse) fastWriteField3(buf []byte) (offset int) {
	if x.Hotel == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetHotel())
	return offset
}

func (x *ExampleResponse) fastWriteField4(buf []byte) (offset int) {
	if x.India == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 4, x.GetIndia())
	return offset
}

func (x *ExampleRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	n += x.sizeField4()
	n += x.sizeField5()
	return n
}

func (x *ExampleRequest) sizeField1() (n int) {
	if x.Alpha == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetAlpha())
	return n
}

func (x *ExampleRequest) sizeField2() (n int) {
	if x.Bravo == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetBravo())
	return n
}

func (x *ExampleRequest) sizeField3() (n int) {
	if x.Charlie == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetCharlie())
	return n
}

func (x *ExampleRequest) sizeField4() (n int) {
	if x.Delta == "" {
		return n
	}
	n += fastpb.SizeString(4, x.GetDelta())
	return n
}

func (x *ExampleRequest) sizeField5() (n int) {
	if x.Echo == 0 {
		return n
	}
	n += fastpb.SizeInt64(5, x.GetEcho())
	return n
}

func (x *ExampleResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	n += x.sizeField4()
	return n
}

func (x *ExampleResponse) sizeField1() (n int) {
	if x.Foxtrot == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetFoxtrot())
	return n
}

func (x *ExampleResponse) sizeField2() (n int) {
	if x.Golf == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetGolf())
	return n
}

func (x *ExampleResponse) sizeField3() (n int) {
	if x.Hotel == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetHotel())
	return n
}

func (x *ExampleResponse) sizeField4() (n int) {
	if x.India == 0 {
		return n
	}
	n += fastpb.SizeInt64(4, x.GetIndia())
	return n
}

var fieldIDToName_ExampleRequest = map[int32]string{
	1: "Alpha",
	2: "Bravo",
	3: "Charlie",
	4: "Delta",
	5: "Echo",
}

var fieldIDToName_ExampleResponse = map[int32]string{
	1: "Foxtrot",
	2: "Golf",
	3: "Hotel",
	4: "India",
}
